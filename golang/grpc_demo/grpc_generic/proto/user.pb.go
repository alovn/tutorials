// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommonResponse struct {
	Err int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	//google.protobuf.Any data = 3;
	Data                 *_struct.Value `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CommonResponse) Reset()         { *m = CommonResponse{} }
func (m *CommonResponse) String() string { return proto.CompactTextString(m) }
func (*CommonResponse) ProtoMessage()    {}
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *CommonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResponse.Unmarshal(m, b)
}
func (m *CommonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResponse.Marshal(b, m, deterministic)
}
func (m *CommonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResponse.Merge(m, src)
}
func (m *CommonResponse) XXX_Size() int {
	return xxx_messageInfo_CommonResponse.Size(m)
}
func (m *CommonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResponse proto.InternalMessageInfo

func (m *CommonResponse) GetErr() int32 {
	if m != nil {
		return m.Err
	}
	return 0
}

func (m *CommonResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *CommonResponse) GetData() *_struct.Value {
	if m != nil {
		return m.Data
	}
	return nil
}

type LoginRequest struct {
	JsCode               string   `protobuf:"bytes,1,opt,name=js_code,json=jsCode,proto3" json:"js_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetJsCode() string {
	if m != nil {
		return m.JsCode
	}
	return ""
}

type LoginResult struct {
	OpenId               string   `protobuf:"bytes,1,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	SessionKey           string   `protobuf:"bytes,2,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResult) Reset()         { *m = LoginResult{} }
func (m *LoginResult) String() string { return proto.CompactTextString(m) }
func (*LoginResult) ProtoMessage()    {}
func (*LoginResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *LoginResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResult.Unmarshal(m, b)
}
func (m *LoginResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResult.Marshal(b, m, deterministic)
}
func (m *LoginResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResult.Merge(m, src)
}
func (m *LoginResult) XXX_Size() int {
	return xxx_messageInfo_LoginResult.Size(m)
}
func (m *LoginResult) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResult.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResult proto.InternalMessageInfo

func (m *LoginResult) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *LoginResult) GetSessionKey() string {
	if m != nil {
		return m.SessionKey
	}
	return ""
}

func init() {
	proto.RegisterType((*CommonResponse)(nil), "user.CommonResponse")
	proto.RegisterType((*LoginRequest)(nil), "user.LoginRequest")
	proto.RegisterType((*LoginResult)(nil), "user.LoginResult")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0xd9, 0xfe, 0xa5, 0x53, 0x51, 0x09, 0xa2, 0xa5, 0x08, 0x96, 0xbd, 0x58, 0x3c, 0xec,
	0x42, 0x7d, 0x03, 0x7b, 0x10, 0xff, 0x9c, 0x02, 0x7a, 0xad, 0x69, 0x77, 0x0c, 0xa9, 0xdb, 0xcc,
	0x9a, 0x49, 0x0e, 0xbd, 0xfa, 0x0a, 0x3e, 0x9a, 0xaf, 0xe0, 0x83, 0xc8, 0x66, 0x5b, 0xd1, 0xdb,
	0x97, 0x6f, 0x7e, 0x64, 0xbe, 0x6f, 0x00, 0x02, 0xa3, 0xcb, 0x2a, 0x47, 0x9e, 0x44, 0xa7, 0xd6,
	0xe3, 0x73, 0x4d, 0xa4, 0x4b, 0xcc, 0xa3, 0xb7, 0x0c, 0xaf, 0x39, 0x7b, 0x17, 0x56, 0xbe, 0x61,
	0x7e, 0xa7, 0xaa, 0x32, 0xb9, 0xb2, 0x96, 0xbc, 0xf2, 0x86, 0x2c, 0x37, 0xd3, 0xf4, 0x05, 0x0e,
	0xe7, 0xb4, 0xd9, 0x90, 0x95, 0xc8, 0x15, 0x59, 0x46, 0x71, 0x0c, 0x6d, 0x74, 0x6e, 0x94, 0x4c,
	0x92, 0x69, 0x57, 0xd6, 0xb2, 0x76, 0x36, 0xac, 0x47, 0xad, 0x49, 0x32, 0x1d, 0xc8, 0x5a, 0x8a,
	0x2b, 0xe8, 0x14, 0xca, 0xab, 0x51, 0x7b, 0x92, 0x4c, 0x87, 0xb3, 0xd3, 0xac, 0x59, 0x91, 0xed,
	0x03, 0x64, 0xcf, 0xaa, 0x0c, 0x28, 0x23, 0x93, 0x5e, 0xc2, 0xc1, 0x23, 0x69, 0x63, 0x25, 0xbe,
	0x07, 0x64, 0x2f, 0xce, 0xa0, 0xbf, 0xe6, 0xc5, 0x8a, 0x0a, 0x8c, 0x3b, 0x06, 0xb2, 0xb7, 0xe6,
	0x39, 0x15, 0x98, 0xde, 0xc2, 0x70, 0x07, 0x72, 0x28, 0x23, 0x47, 0x15, 0xda, 0x85, 0x29, 0xf6,
	0x5c, 0xfd, 0xbc, 0x2b, 0xc4, 0x05, 0x0c, 0x19, 0x99, 0x0d, 0xd9, 0xc5, 0x1b, 0x6e, 0x77, 0xb1,
	0x60, 0x67, 0x3d, 0xe0, 0x76, 0x76, 0x0f, 0x9d, 0x27, 0x46, 0x27, 0x6e, 0xa0, 0x1b, 0x3f, 0x14,
	0x22, 0x8b, 0x37, 0xfb, 0x1b, 0x63, 0x7c, 0xd2, 0x78, 0xff, 0xcb, 0xa7, 0x47, 0x1f, 0x5f, 0xdf,
	0x9f, 0xad, 0x81, 0xe8, 0xe7, 0x25, 0x69, 0x6d, 0xec, 0xb2, 0x17, 0x3b, 0x5d, 0xff, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xa4, 0x10, 0x25, 0xe0, 0x76, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*CommonResponse, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/user.User/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	Login(context.Context, *LoginRequest) (*CommonResponse, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _User_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
